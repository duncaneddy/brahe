name: Test Rust
on: [ workflow_call ]
jobs:
    test-rust:
        runs-on: ubuntu-latest
        environment: release
        env:
            CARGO_TERM_COLOR: always
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Rust
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: nightly
            -   name: Install cargo-llvm-cov
                uses: taiki-e/install-action@cargo-llvm-cov
            -   name: Generate code coverage
                run: cargo llvm-cov  --workspace --lcov --output-path lcov.info --features ci
            -   name: Upload coverage to Codecov
                uses: codecov/codecov-action@v5
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    files: lcov.info
                    fail_ci_if_error: false # TODO: Change to true
    test-rust-docs:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   name: Install Rust
                run: rustup update nightly
            -   run: rustup default nightly
            -   name: Test Rust doc examples
                run: cargo test --doc --features ci
    test-rust-network:
        runs-on: ubuntu-latest
        needs: test-rust
        steps:
            -   uses: actions/checkout@v5
            -   name: Install Rust
                run: rustup update nightly
            -   run: rustup default nightly
            -   name: Test Rust network tests
                run: cargo test --features network
    pre-cache-python:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
        steps:
            -   uses: actions/checkout@v5
            -   name: Install Rust
                run: rustup update nightly
            -   run: rustup default nightly
            -   name: Install the latest version of uv
                uses: astral-sh/setup-uv@v6
                with:
                    python-version: ${{ matrix.python-version }}
                    enable-cache: true
            -   name: Install dependencies
                run: uv sync --all-extras --frozen