# This workflow will run only if the only changes made are in the docs folder.
# This enables quick fixes to documentation to be deployed without running the entire test suite.

name: Update Docs

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to deploy (e.g., v0.1.0). If not provided, deploys as "latest"'
        required: false
        type: string
        default: ''

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      RUST_TOOLCHAIN: nightly
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history for accurate git revision dates and mike versioning

      - name: Configure Git for mike
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

      - name: Download figures artifact
        uses: actions/download-artifact@v4
        with:
          name: doc-figures
          path: docs/figures/

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Set default Rust toolchain
        run: |
          rustup update ${{ env.RUST_TOOLCHAIN }}
          rustup default ${{ env.RUST_TOOLCHAIN }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Install Python 3.14
        run: uv python install 3.14

      - name: Install dependencies
        run: uv sync --group docs --all-extras --frozen

      # Try to download Brahe cache to avoid external API calls
      - name: Download Brahe cache directory
        id: download-cache
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: brahe-cache
          path: ~/.cache/brahe/

      - name: Build Python extension
        run: uv pip install -e .

      - name: Generate type stubs
        run: ./scripts/generate_stubs.sh

      - name: Deploy documentation (versioned release)
        if: inputs.version != ''
        run: uv run --frozen mike deploy --push --update-aliases ${{ inputs.version }} stable

      - name: Deploy documentation (latest from main)
        if: inputs.version == ''
        run: uv run --frozen mike deploy --push --update-aliases latest