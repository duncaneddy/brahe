name: Test Python
on: [ workflow_call ]
jobs:
    test-python:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
                rust-toolchain: [nightly]
        steps:
            -   name: Set up Rust toolchain
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   uses: actions/checkout@v5
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Install the latest version of uv
                uses: astral-sh/setup-uv@v6
                with:
                    enable-cache: true

            # Try to download Brahe cache to avoid external API calls
            -   name: Download Brahe cache directory
                id: download-cache
                continue-on-error: true
                uses: actions/download-artifact@v4
                with:
                    name: brahe-cache
                    path: ~/.cache/brahe/

            # Try to download pre-built Python extension for this Python version
            -   name: Download Python extension artifact
                id: download-extension
                continue-on-error: true
                uses: actions/download-artifact@v4
                with:
                    name: python-extension-${{ runner.os }}-py${{ matrix.python-version }}
                    path: ./cached-extension

            -   name: Install dependencies and Python package
                run: |
                    # Sync dependencies first
                    uv sync --all-extras --frozen --python python

                    # Then install the brahe package
                    if [ -d "./cached-extension" ] && [ -f "./cached-extension/libbrahe"* ]; then
                        echo "Using cached Python extension"
                        mkdir -p target/release
                        cp ./cached-extension/libbrahe* target/release/
                        # Install maturin for --no-build-isolation
                        uv pip install maturin
                        uv pip install -e . --no-build-isolation
                    else
                        echo "Building Python extension (no cache available)"
                        uv pip install -e .
                    fi

            -   name: Test with python ${{ matrix.python-version }}
                run: uv run --frozen coverage run -m pytest -m ''

            -   name: Generate coverage report
                run: uv run --frozen coverage report
