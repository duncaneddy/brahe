name: Publish Version Release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  update-bundled-data:
    uses: ./.github/workflows/update_bundled_data.yml

  test-rust:
    uses: ./.github/workflows/test_rust.yml
    needs: [update-bundled-data]
  test-python:
    uses: ./.github/workflows/test_python.yml
    needs: [ test-rust ]
  test-examples:
    uses: ./.github/workflows/test_examples.yml
    needs: [ test-rust, test-python ]
  update-docs:
    uses: ./.github/workflows/update_docs.yml
    needs: [ test-python, test-examples ]
    with:
      version: ${{ github.ref_name }}

  python-build-source:
    needs: [update-docs]
    runs-on: ubuntu-latest
    environment: release
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]
        rust-toolchain: [nightly]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}

    - name: Set default Rust toolchain
      run: |
        rustup update ${{ matrix.rust-toolchain }}
        rustup default ${{ matrix.rust-toolchain }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v7
      with:
        enable-cache: true

    - name: Install Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --frozen

    - name: Build library
      run: uv run --frozen python -m build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz
        name: pymdps-${{ github.ref_name }}-${{ runner.os }}-source

  python-build-wheels:
    needs: [update-docs]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [ ubuntu-latest, macos-latest, windows-latest ]
          python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
    environment: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -i python${{ matrix.python-version }} 

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        path: target/wheels/*.whl
        name: brahe-${{ github.ref_name }}-python${{ matrix.python-version }}-${{ runner.os }}-wheel

  release-python:
    needs: [python-build-source, python-build-wheels]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    steps:
    # Download all artifacts to dist folder
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Copy artifacts to dist folder
      run: |
        mkdir dist
        cp -r ${{ github.workspace }}/*-source/* dist/
        cp -r ${{ github.workspace }}/*-wheel/* dist/

    - name: Upload package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  release-rust:
    runs-on: ubuntu-latest
    needs: [ python-build-source, python-build-wheels, update-docs ]
    env:
      RUST_TOOLCHAIN: nightly
    steps:
      - uses: actions/checkout@v5
      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Set default Rust toolchain
        run: |
          rustup update ${{ env.RUST_TOOLCHAIN }}
          rustup default ${{ env.RUST_TOOLCHAIN }}
      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}