name: Test Rust
on: [ workflow_call ]
jobs:
    build-rust:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                rust-toolchain: [nightly]
        env:
            CARGO_TERM_COLOR: always
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Rust toolchain with cache
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   name: Build Rust package
                run: cargo build
            -   name: Upload Rust build artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: rust-build-artifacts-${{ runner.os }}
                    path: |
                        target/debug/
                        !target/debug/incremental/
                        !target/debug/deps/*.d
                        !target/debug/deps/*.rmeta
                        !target/debug/.fingerprint/
                    retention-days: 3
    test-rust:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                rust-toolchain: [nightly]
        needs: build-rust
        environment: release
        env:
            CARGO_TERM_COLOR: always
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Rust toolchain with cache
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   name: Download Rust build artifacts
                uses: actions/download-artifact@v4
                with:
                    name: rust-build-artifacts-${{ runner.os }}
                    path: target/debug/
            -   name: Install cargo-llvm-cov
                uses: taiki-e/install-action@cargo-llvm-cov
            -   name: Run Rust tests with coverage
                run: cargo llvm-cov --workspace --lcov --output-path lcov.info --features ci
            -   name: Upload coverage to Codecov
                uses: codecov/codecov-action@v5
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    files: lcov.info
                    fail_ci_if_error: false # TODO: Change to true
    test-rust-docs:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                rust-toolchain: [nightly]
        needs: build-rust
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Rust toolchain with cache
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   name: Download Rust build artifacts
                uses: actions/download-artifact@v4
                with:
                    name: rust-build-artifacts-${{ runner.os }}
                    path: target/debug/
            -   name: Run Rust doc tests
                run: cargo test --doc --features ci
    pre-cache-python:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
                rust-toolchain: [nightly]
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Rust toolchain
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   name: Install the latest version of uv
                uses: astral-sh/setup-uv@v7
                with:
                    enable-cache: true
            -   name: Install Python ${{ matrix.python-version }}
                run: uv python install ${{ matrix.python-version }}

            -   name: Install dependencies
                run: uv sync --all-extras --frozen --python python