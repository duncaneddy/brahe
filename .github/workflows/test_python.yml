name: Test Python
on: [ workflow_call ]
jobs:
    test-python:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # os: [ubuntu-latest]
                # python-version: [ '3.13', '3.14' ]
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: [ '3.10', '3.11', '3.12', '3.13', '3.14' ]
                rust-toolchain: [nightly]
        steps:
            -   name: Set up Rust toolchain
                uses: actions-rust-lang/setup-rust-toolchain@v1
                with:
                    toolchain: ${{ matrix.rust-toolchain }}
            -   name: Set default Rust toolchain
                run: |
                    rustup update ${{ matrix.rust-toolchain }}
                    rustup default ${{ matrix.rust-toolchain }}
            -   uses: actions/checkout@v5
            -   name: Install the latest version of uv
                uses: astral-sh/setup-uv@v7
                with:
                    enable-cache: true
            -   name: Install Python ${{ matrix.python-version }}
                run: uv python install ${{ matrix.python-version }}

            # Try to download Brahe cache to avoid external API calls
            -   name: Download Brahe cache directory (Unix)
                if: runner.os != 'Windows'
                id: download-cache-unix
                continue-on-error: true
                uses: actions/download-artifact@v4
                with:
                    name: brahe-cache-${{ runner.os }}
                    path: ~/.cache/brahe/

            -   name: Download Brahe cache directory (Windows)
                if: runner.os == 'Windows'
                id: download-cache-windows
                continue-on-error: true
                uses: actions/download-artifact@v4
                with:
                    name: brahe-cache-${{ runner.os }}
                    path: ~\.cache\brahe\


            -   name: Install dependencies
                run: uv sync --group test --all-extras --frozen --python python
                
            -   name: Test with python ${{ matrix.python-version }}
                run: uv run --frozen coverage run -m pytest -m ''

            -   name: Generate coverage report
                run: |
                    uv run --frozen coverage report
                    uv run --frozen coverage html
            
            -   name: Upload coverage report
                uses: actions/upload-artifact@v4
                with:
                    name: coverage-report-${{ matrix.os }}-py${{ matrix.python-version }}
                    path: htmlcov/

            
