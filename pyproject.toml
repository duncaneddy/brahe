[project]
name = "brahe"
description = """
Brahe is a modern satellite dynamics library for research and engineering
applications. It is designed to be easy-to-learn, high-performance, and quick-to-deploy.
The north-star of the development is enabling users to solve meaningful problems
and answer questions quickly, easily, and correctly.
"""
version = "0.1.0"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = ["space", "astrodynamics", "satellite", "research"]
authors = [
    { name = "Duncan Eddy", email = "duncan.eddy@gmail.com" }
]
maintainers = [
    { name = "Duncan Eddy", email = "duncan.eddy@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=2.0.2",
    "rich>=14.1.0",
    "typer>=0.16.0",
]

[project.urls]
Documentation = "https://duncaneddy.github.io/brahe/"
Repository = "https://github.com/duncaneddy/brahe"
Issues = "https://github.com/duncaneddy/brahe/pulls"

[project.scripts]
brahe = "brahe.cli.__main__:main"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[dependency-groups]
dev = [
    "matplotlib>=3.9.4",
    "mike>=2.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-material>=9.6.20",
    "mkdocs-section-index>=0.3.10",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
    "plotly>=6.3.0",
    "pre-commit>=4.3.0",
    "pyo3-stubgen>=0.3.0",
    "pytest>=7.4.4",
    "pytest-cov>=3.0.0",
    "pytest-order>=1.3.0",
]

[tool.maturin]
# We name the rust module with a leading underscore to avoid a name conflict with the python module
# This is a workaround for IDEs to avoid confusion in function naming.
#
# See: https://www.maturin.rs/project_layout#import-rust-as-a-submodule-of-your-project
module-name = "brahe._brahe"
# "extension-module" tells pyo3 we want to build an extension module (skips linking against libpython.so)
features = ["pyo3/extension-module", "python"]
# Include type stub file in distribution
include = ["brahe/_brahe.pyi"]

[tool.ruff.lint]
# Ignore F403 (import * used) in __init__.py for backward compatibility pattern
extend-ignore = ["F403"]
